package com.cyf.vblog.service;

import com.cyf.vblog.exception.CommonException;
import com.cyf.vblog.exception.Error;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.platform.commons.util.ReflectionUtils;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.test.util.ReflectionTestUtils;
import org.springframework.util.FileSystemUtils;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.util.Base64;

import static org.junit.jupiter.api.Assertions.*;

class LocalImageServiceTest {

    ImageService localImageService;

    @BeforeEach
    void init(){
        localImageService = new LocalImageService();
        ReflectionTestUtils.setField(localImageService, "imagePath", "./testTmp");
        ReflectionTestUtils.setField(localImageService, "serverAddr", "http://localhost:8080");
    }

    @Test
    void saveImage() throws IOException {
        String testImageBase64 = "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";
        byte[] data = Base64.getDecoder().decode(testImageBase64);
        MultipartFile image = new MockMultipartFile("test","test.png",null, data);

        // save image
        localImageService.saveImage(image, 1L); // should save as "./testTmp/{userId}/{filename}"
        File file = new File("./testTmp/1/test.png");
        assertEquals(true, file.exists());
        localImageService.saveImage(image, 2L);
        file = new File("./testTmp/2/test.png");
        assertEquals(true, file.exists());

        // save image with save name
        localImageService.saveImage(image, 1L);
        file = new File("./testTmp/1/test_1.png");
        assertEquals(true, file.exists());
        localImageService.saveImage(image, 1L);
        file = new File("./testTmp/1/test_2.png");
        assertEquals(true, file.exists());
    }

    @Test
    void getImage() throws IOException, CommonException {
        String testImageBase64 = "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";
        byte[] data = Base64.getDecoder().decode(testImageBase64);
        MultipartFile image = new MockMultipartFile("test","test.png",null, data);

        // save image
        localImageService.saveImage(image, 1L);
        localImageService.saveImage(image, 2L);

        // image doesn't exist
        CommonException e = assertThrows(CommonException.class, ()->{localImageService.getImage("./testTmp/1/3.png");});
        assertEquals(e.getInternalCode(), Error.IMAGE_NOT_FOUNT.getCode());

        // image exist
        localImageService.getImage("/1/test.png");
        localImageService.getImage("/2/test.png");
    }

    @AfterAll
    static void clean(){
        FileSystemUtils.deleteRecursively(new File("./testTmp"));
    }
}